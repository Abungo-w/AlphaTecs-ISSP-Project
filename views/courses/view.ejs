<!DOCTYPE html>
<html>
<head>
    <title>Course Details</title>
    <link rel="stylesheet" href="/css/course_view.css">
    <link rel="stylesheet" href="/css/module.css">
    <link rel="stylesheet" href="/css/progress_bar.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body>
    <div class="course-view-wrapper">
        <!-- Sidebar Navigation -->
        <nav class="course-sidebar">
            <div class="nav-section">
                <a href="#introduction" class="nav-item active">
                    <span class="nav-number">1</span>
                    Introduction
                </a>
                <% if (course.modules && course.modules.length > 0) { %>
                    <% course.modules.forEach((moduleCode, index) => { %>
                        <a href="#module-<%= moduleCode %>" class="nav-item" data-module-nav="<%= moduleCode %>">
                            <span class="nav-number"><%= index + 2 %></span>
                            <span class="module-title">Loading...</span>
                        </a>
                    <% }); %>
                <% } %>
                <a href="#summary" class="nav-item">
                    <span class="nav-number"><%= (course.modules?.length || 0) + 2 %></span>
                    Summary
                </a>
                <!-- Progress Section -->
                <div class="progress-section nav-item">
                    <h2>Progress</h2>
                    <div class="progress-bar">
                        <div class="progress" id="progress-bar" style="width: 0%;"></div>
                    </div>
                    <p id="progress-text">   0% completed</p>
                </div>
                
            </div>
        </nav>

        <!-- Main Content -->
        <div class="course-view-container">
            <div class="course-header">
                <h1><%= course.title %></h1>
                <div class="course-meta">
                    <span class="course-code"><%= course.courseCode %></span>
                    <span>Created: <%= new Date(course.createdAt).toLocaleDateString() %></span>
                </div>
                <% if (user && user.role === 'admin') { %>
                    <div class="course-actions">
                        <a href="/courses/<%= course.courseCode %>/edit" class="btn-edit">
                            <i class="fas fa-edit"></i>
                            <span>Edit Course</span>
                        </a>
                    </div>
                <% } %>
            </div>

            <!-- Introduction Section -->
            <section id="introduction" class="course-section active">
                <h2>Introduction</h2>
                <div class="content ql-editor">
                    <%- course.introduction %>
                </div>
                
                <div class="module-actions">
                    <div class="navigation-buttons">
                        <% if (course.modules && course.modules.length > 0) { %>
                            <button onclick="navigateSection('module-<%= course.modules[0] %>')" class="btn-next">
                                Next <i class="fas fa-arrow-right"></i>
                            </button>
                        <% } %>
                    </div>
                </div>
            </section>

            <!-- Modules Section -->
            <% if (course.modules && course.modules.length > 0) { %>
                <% course.modules.forEach((moduleCode, index) => { %>
                    <section id="module-<%= moduleCode %>" class="course-section">
                        <div class="module-header">
                            <div class="module-header-content">
                                <h2 class="module-title">Loading...</h2>
                                <div class="module-meta">
                                    <span class="module-code"><%= moduleCode %></span>
                                </div>
                            </div>
                        </div>
                        <div class="module-content" data-module-code="<%= moduleCode %>">
                            <div class="loading">Loading module content...</div>
                        </div>
                        
                        <div class="module-actions">
                            <div class="navigation-buttons">
                                <% if (index === 0) { %>
                                    <button onclick="navigateSection('introduction')" class="btn-prev">
                                        <i class="fas fa-arrow-left"></i> Introduction
                                    </button>
                                <% } else { %>
                                    <button onclick="navigateSection('module-<%= course.modules[index-1] %>')" class="btn-prev">
                                        <i class="fas fa-arrow-left"></i> Previous Module
                                    </button>
                                <% } %>
                                
                                <% if (index < course.modules.length - 1) { %>
                                    <button onclick="navigateSection('module-<%= course.modules[index+1] %>')" class="btn-next">
                                        Next Module <i class="fas fa-arrow-right"></i>
                                    </button>
                                <% } else { %>
                                    <button onclick="navigateSection('summary')" class="btn-next">
                                        Summary <i class="fas fa-arrow-right"></i>
                                    </button>
                                <% } %>
                            </div>
                        </div>
                    </section>
                <% }); %>
            <% } else { %>
                <div class="no-modules">
                    No modules assigned to this course.
                </div>
            <% } %>

            <!-- Summary Section -->
            <section id="summary" class="course-section">
                <h2>Course Summary</h2>
                <div class="content ql-editor">
                    <%- course.summary %>
                </div>
                
                <div class="module-actions">
                    <div class="navigation-buttons">
                        <% if (course.modules && course.modules.length > 0) { %>
                            <button onclick="navigateSection('module-<%= course.modules[course.modules.length-1] %>')" class="btn-prev">
                                <i class="fas fa-arrow-left"></i> Previous Module
                            </button>
                        <% } else { %>
                            <button onclick="navigateSection('introduction')" class="btn-prev">
                                <i class="fas fa-arrow-left"></i> Introduction
                            </button>
                        <% } %>
                    </div>
                </div>
            </section>
        </div>
    </div>

    <style>
        .loading {
            text-align: center;
            padding: 2rem;
            color: #718096;
        }
        
        .error {
            color: #e53e3e;
            padding: 1rem;
            background: #fff5f5;
            border-radius: 4px;
            margin-top: 1rem;
        }
        
        /* Module actions and navigation buttons */
        .module-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid #e2e8f0;
        }
        
        .navigation-buttons {
            display: flex;
            gap: 1rem;
        }
        
        .btn-prev, .btn-next {
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            color: white;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.3s ease;
        }
        
        .btn-prev {
            background-color: #4a5568;
        }
        
        .btn-next {
            background-color: #3182ce;
        }
        
        .btn-prev:hover, .btn-next:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        
        /* Fix for case studies */
        .case-study-section {
            margin-top: 2rem;
            padding: 1.5rem;
            background: #f8fafc;
            border-radius: 8px;
            border: 1px solid #e2e8f0;
        }
        
        .case-study-content {
            margin-top: 1rem;
            line-height: 1.6;
        }
        
        /* Fix for quiz button */
        .btn-quiz {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            background: #48bb78;
            color: white;
            border: none;
            border-radius: 6px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
        }
        
        .btn-quiz:hover {
            background: #38a169;
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        
        /* Question and answer styles */
        .question-header {
            padding: 1rem;
            background: #fff;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-weight: 500;
            color: #2d3748;
        }
        
        .question-header:hover {
            background: #f7fafc;
        }
        
        .question-header i {
            transition: transform 0.3s;
        }
        
        .question-header.active i {
            transform: rotate(180deg);
            color: #3182ce;
        }
        
        .answer {
            padding: 0;
            max-height: 0;
            overflow: hidden;
            transition: all 0.3s ease;
            background: #fff;
        }
        
        .answer.active {
            padding: 1rem;
            max-height: 500px;
            border-top: 1px solid #e2e8f0;
        }
    </style>

    <script>
        // Make course data available to JavaScript
        const courseData = {
            courseCode: "<%= course.courseCode %>"
        };
        
        // Handle sidebar navigation
        document.querySelectorAll('.nav-item').forEach(item => {
            item.addEventListener('click', function(e) {
                e.preventDefault();
                navigateSection(this.getAttribute('href').substring(1));
            });
        });
        
        // Function to navigate between sections
        function navigateSection(targetId) {
            // Remove active class from all nav items and sections
            document.querySelectorAll('.nav-item').forEach(i => i.classList.remove('active'));
            document.querySelectorAll('.course-section').forEach(s => s.classList.remove('active'));
            
            // Add active class to target section
            const targetSection = document.getElementById(targetId);
            if (targetSection) {
                targetSection.classList.add('active');
                
                // Also activate the corresponding sidebar item
                const sidebarItem = document.querySelector(`.nav-item[href="#${targetId}"]`);
                if (sidebarItem) {
                    sidebarItem.classList.add('active');
                }
                
                // Ensure module content is loaded if this is a module section
                if (targetId.startsWith('module-')) {
                    const moduleCode = targetId.substring(7); // Remove 'module-' prefix
                    const moduleContent = document.querySelector(`[data-module-code="${moduleCode}"]`);
                    
                    // If module content shows error or is still in loading state, try to reload it
                    if (moduleContent && 
                        (moduleContent.querySelector('.error') || 
                         moduleContent.querySelector('.loading'))) {
                        loadModuleContent(moduleCode);
                    }
                }
                
                // Scroll to the top of the section
                window.scrollTo({
                    top: 0,
                    behavior: 'smooth'
                });
            }
        }

        // Function to toggle question answers
        function toggleAnswer(id) {
            const answer = document.getElementById(`answer-${id}`);
            if (!answer) return;
            
            const header = document.querySelector(`[data-question="${id}"]`);
            
            if (answer.classList.contains('active')) {
                answer.classList.remove('active');
                header.classList.remove('active');
            } else {
                // Close all other answers first
                document.querySelectorAll('.answer').forEach(a => a.classList.remove('active'));
                document.querySelectorAll('.question-header').forEach(h => h.classList.remove('active'));
                
                // Open this answer
                answer.classList.add('active');
                header.classList.add('active');
            }
        }
        
        // Improved module content loading with proper case study and quiz display
        async function loadModuleContent(moduleCode) {
            const moduleContent = document.querySelector(`[data-module-code="${moduleCode}"]`);
            const moduleNav = document.querySelector(`[data-module-nav="${moduleCode}"] .module-title`);
            const moduleTitle = document.querySelector(`#module-${moduleCode} .module-title`);
            
            if (!moduleContent) return;

            // Show loading state
            moduleContent.innerHTML = `<div class="loading">Loading module content...<div class="spinner"></div></div>`;

            try {
                const response = await fetch(`/api/modules/${moduleCode}`);
                
                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.error || 'Failed to load module');
                }

                const data = await response.json();

                // Update the navigation and section titles
                if (moduleNav) moduleNav.textContent = data.title;
                if (moduleTitle) moduleTitle.textContent = data.title;
                
                // Build the module content HTML
                let html = `
                    <div class="module-content-section">
                        <div class="module-info">
                            <p><strong>Duration:</strong> ${data.duration || 'N/A'} minutes</p>
                            <p><strong>Difficulty:</strong> ${data.difficulty || 'N/A'}</p>
                        </div>
                        <div class="module-description">
                            ${data.description || ''}
                        </div>
                        <div class="module-content-body">
                            ${data.content || ''}
                        </div>
                `;
                
                // Add case studies section if present
                if (data.caseStudy && data.caseStudy.length > 0) {
                    html += `<div class="case-study-section">
                        <h3><i class="fas fa-book-reader"></i> Case Study</h3>`;
                    
                    data.caseStudy.forEach((study, studyIndex) => {
                        html += `
                            <div class="case-study-content">
                                ${study.title ? `<h4>${study.title}</h4>` : ''}
                                <p>${study.content || ''}</p>
                                
                                ${study.questions && study.questions.length > 0 ? 
                                    `<div class="discussion-questions">
                                        <h3>Discussion Questions</h3>
                                        ${study.questions.map((q, qIndex) => {
                                            const questionId = `${moduleCode}-${studyIndex}-${qIndex}`;
                                            return `
                                                <div class="qa-pair">
                                                    <div class="question-header" data-question="${questionId}" onclick="toggleAnswer('${questionId}')">
                                                        <div class="question">${q.question}</div>
                                                        <i class="fas fa-chevron-down"></i>
                                                    </div>
                                                    <div class="answer" id="answer-${questionId}">
                                                        ${q.answer}
                                                    </div>
                                                </div>
                                            `;
                                        }).join('')}
                                    </div>` : ''
                                }
                            </div>
                        `;
                    });
                    
                    html += `</div>`;
                }
                
                // Add quiz section if present - FIX: use courseData instead of course
                if (data.quiz && data.quiz.length > 0) {
                    html += `
                        <div class="quiz-section">
                            <h3><i class="fas fa-tasks"></i> Assessment</h3>
                            <div class="quiz-info">
                                Test your understanding with this ${data.quiz.length}-question assessment.
                            </div>
                            <div class="quiz-button-container">
                                <a href="/modules/${moduleCode}/quiz?source=course&courseCode=${courseData.courseCode}" class="btn-quiz">
                                    <i class="fas fa-question-circle"></i> Start Assessment
                                </a>
                            </div>
                        </div>
                    `;
                }
                
                html += `</div>`;
                moduleContent.innerHTML = html;
                
            } catch (error) {
                console.error(`Error loading module ${moduleCode}:`, error);
                if (moduleNav) moduleNav.textContent = `Module ${moduleCode}`;
                if (moduleTitle) moduleTitle.textContent = `Module ${moduleCode}`;
                moduleContent.innerHTML = `
                    <div class="error">
                        <i class="fas fa-exclamation-circle"></i>
                        <p>Error loading module content: ${error.message}. The module may not exist or there was a problem loading it.</p>
                        <button onclick="loadModuleContent('${moduleCode}')" class="btn-retry">
                            <i class="fas fa-redo"></i> Retry
                        </button>
                    </div>
                `;
            }
        }

        // Load content for all modules when page loads
        document.addEventListener('DOMContentLoaded', function() {
            // First load all modules
            document.querySelectorAll('[data-module-code]').forEach(moduleSection => {
                const moduleCode = moduleSection.dataset.moduleCode;
                loadModuleContent(moduleCode);
            });
            
            // Then check if there's a hash in URL - handle navigation from quiz back to course
            if (window.location.hash) {
                const targetId = window.location.hash.substring(1);
                // Use setTimeout to ensure DOM is ready
                setTimeout(() => {
                    navigateSection(targetId);
                }, 300);
            }
        });
    </script>

    <!-- Add some additional styling for the spinner -->
    <style>
        .spinner {
            width: 40px;
            height: 40px;
            margin: 20px auto;
            border: 4px solid #f3f3f3;
            border-top: 4px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        
        .loading {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            color: #718096;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</body>
</html>
