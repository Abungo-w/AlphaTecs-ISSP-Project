<!DOCTYPE html>
<html>
<head>
    <title>Create New Course</title>
    <link rel="stylesheet" href="/css/create_course.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
</head>
<body>
    <div class="course-creation-wrapper">
        <div class="course-creation-header">
            <h1>Create New Course</h1>
            <p class="subtitle">Create a new training course</p>
        </div>
        
        <form action="/courses" method="POST" onsubmit="return prepareSubmission()">
            <div class="form-section">
                <label for="courseCode">Course Code</label>
                <p class="field-description">Format: C-XX-XX</p>
                <input type="text" id="courseCode" name="courseCode" class="form-input" required pattern="C-\d{2}-\d{2}" placeholder="C-45-64">
            </div>

            <div class="form-section">
                <label for="title">Course Title</label>
                <p class="field-description">Main course title</p>
                <input type="text" id="title" name="title" class="form-input" required placeholder="Construction Project Management">
            </div>

            <div class="form-section">
                <label for="description">Course Description</label>
                <p class="field-description">Brief overview of the course content</p>
                <div id="intro-editor" class="editor-container"></div>
                <input type="hidden" name="intro" id="hidden-intro">
            </div>

            <div class="form-section">
                <label>Module Codes</label>
                <p class="field-description">Type or select module codes (M-XX-XX-XX)</p>
                <div id="module-list">
                    <div class="module-input-group">
                        <input type="text" 
                               name="moduleCodes[]" 
                               class="form-input module-code-input" 
                               list="modulesList"
                               placeholder="Type or select a module..."
                               pattern="M-\d{2}-\d{2}-\d{2}"
                               title="Format: M-XX-XX-XX">
                        <button type="button" class="btn-small remove-module-btn" onclick="removeModuleInput(this)">Remove</button>
                    </div>
                </div>
                <datalist id="modulesList">
                    <!-- Module options will be populated here -->
                </datalist>
                <button type="button" class="btn-secondary" onclick="addModuleInput()">Add Another Module</button>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn-primary">Create Course</button>
            </div>
        </form>
    </div>

    <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
    <script>
        const descriptionEditor = new Quill('#intro-editor', {
            theme: 'snow',
            modules: {
                toolbar: [
                    ['bold', 'italic', 'underline', 'strike'],
                    ['blockquote', 'code-block'],
                    [{ 'header': 1 }, { 'header': 2 }],
                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                    [{ 'script': 'sub'}, { 'script': 'super' }],
                    [{ 'indent': '-1'}, { 'indent': '+1' }],
                    [{ 'direction': 'rtl' }],
                    [{ 'size': ['small', false, 'large', 'huge'] }],
                    ['link', 'image'],
                    ['clean']
                ]
            },
            placeholder: 'Write your course description...'
        });

        // Load available modules when page loads
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                const response = await fetch('/api/modules');
                if (!response.ok) throw new Error('Failed to fetch modules');
                
                const modules = await response.json();
                const modulesList = document.getElementById('modulesList');
                
                // Add module options to datalist
                modules.forEach(module => {
                    const option = document.createElement('option');
                    option.value = module.code;
                    option.label = `${module.code} - ${module.title}`;
                    modulesList.appendChild(option);
                });
            } catch (error) {
                console.error('Error loading modules:', error);
            }
        });

        function addModuleInput() {
            const container = document.getElementById('module-list');
            const div = document.createElement('div');
            div.className = 'module-input-group';
            
            const input = document.createElement('input');
            input.type = 'text';
            input.name = 'moduleCodes[]';
            input.className = 'form-input module-code-input';
            input.setAttribute('list', 'modulesList');
            input.placeholder = 'Type or select a module...';
            input.pattern = 'M-\\d{2}-\\d{2}-\\d{2}';
            input.title = 'Format: M-XX-XX-XX';

            const button = document.createElement('button');
            button.type = 'button';
            button.className = 'btn-small remove-module-btn';
            button.onclick = function() { removeModuleInput(this); };
            button.textContent = 'Remove';

            div.appendChild(input);
            div.appendChild(button);
            container.appendChild(div);
        }

        function removeModuleInput(button) {
            const group = button.closest('.module-input-group');
            const allGroups = document.querySelectorAll('.module-input-group');
            if (allGroups.length > 1) {
                group.remove();
            }
        }

        function prepareSubmission() {
            document.getElementById('hidden-intro').value = descriptionEditor.root.innerHTML;
            
            // Changed to check input elements
            const selections = [...document.querySelectorAll('input[name="moduleCodes[]"]')]
                .map(input => input.value)
                .filter(value => value);
                
            if (selections.length === 0) {
                alert('Please select at least one module');
                return false;
            }
            
            return true;
        }
    </script>
</body>
</html>

